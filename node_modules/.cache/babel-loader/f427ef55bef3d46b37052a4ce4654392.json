{"ast":null,"code":"import Cookies from \"universal-cookie\";\nexport default class AuthService {\n  constructor() {\n    this.userCookies = new Cookies();\n  }\n\n  /**\r\n   * @returns {AuthService}\r\n   */\n  static getInstance() {\n    if (AuthService.myInstance == null) {\n      return AuthService.myInstance = new AuthService();\n    }\n\n    return this.myInstance;\n  }\n\n  loginAndStoreSecureToken(token) {\n    this.userCookies.set(\"secureToken\", {\n      key: token\n    }, {\n      path: \"/\",\n      expires: new Date(Date.now() + 604800),\n      // httpOnly: true,\n      sameSite: true\n    });\n  }\n\n  logoutAndRemoveSecureToken() {\n    this.userCookies.remove(\"secureToken\", {\n      path: \"/\",\n      expires: new Date(Date.now() + 604800),\n      // httpOnly: true,\n      sameSite: true\n    });\n  }\n\n  hasSecureToken() {\n    if (this.userCookies.get(\"secureToken\")) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  getSecureToken() {\n    let secureToken = JSON.stringify(this.userCookies.get(\"secureToken\"));\n    let secureTokenSpliced = secureToken.substring(0, 15);\n    console.log(secureTokenSpliced);\n    return secureTokenSpliced;\n  }\n\n}\nAuthService.myInstance = null;","map":{"version":3,"sources":["/Users/nabeelsyed/Documents/School/Final year - Semester 1/SYST36367 Capstone Project Requirements _ Design/Project/newbytex-app/src/services/auth-service.js"],"names":["Cookies","AuthService","userCookies","getInstance","myInstance","loginAndStoreSecureToken","token","set","key","path","expires","Date","now","sameSite","logoutAndRemoveSecureToken","remove","hasSecureToken","get","getSecureToken","secureToken","JSON","stringify","secureTokenSpliced","substring","console","log"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,kBAApB;AAEA,eAAe,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAE/BC,WAF+B,GAEjB,IAAIF,OAAJ,EAFiB;AAAA;;AAI/B;AACF;AACA;AACoB,SAAXG,WAAW,GAAG;AACnB,QAAIF,WAAW,CAACG,UAAZ,IAA0B,IAA9B,EAAoC;AAClC,aAAQH,WAAW,CAACG,UAAZ,GAAyB,IAAIH,WAAJ,EAAjC;AACD;;AACD,WAAO,KAAKG,UAAZ;AACD;;AAEDC,EAAAA,wBAAwB,CAACC,KAAD,EAAQ;AAC9B,SAAKJ,WAAL,CAAiBK,GAAjB,CACE,aADF,EAEE;AAAEC,MAAAA,GAAG,EAAEF;AAAP,KAFF,EAGE;AACEG,MAAAA,IAAI,EAAE,GADR;AAEEC,MAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,MAAtB,CAFX;AAGE;AACAC,MAAAA,QAAQ,EAAE;AAJZ,KAHF;AAUD;;AAEDC,EAAAA,0BAA0B,GAAG;AAC3B,SAAKZ,WAAL,CAAiBa,MAAjB,CAAwB,aAAxB,EAAuC;AACrCN,MAAAA,IAAI,EAAE,GAD+B;AAErCC,MAAAA,OAAO,EAAE,IAAIC,IAAJ,CAASA,IAAI,CAACC,GAAL,KAAa,MAAtB,CAF4B;AAGrC;AACAC,MAAAA,QAAQ,EAAE;AAJ2B,KAAvC;AAMD;;AAEDG,EAAAA,cAAc,GAAG;AACf,QAAI,KAAKd,WAAL,CAAiBe,GAAjB,CAAqB,aAArB,CAAJ,EAAyC;AACvC,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF;;AAEDC,EAAAA,cAAc,GAAG;AACf,QAAIC,WAAW,GAAGC,IAAI,CAACC,SAAL,CAAe,KAAKnB,WAAL,CAAiBe,GAAjB,CAAqB,aAArB,CAAf,CAAlB;AACA,QAAIK,kBAAkB,GAAGH,WAAW,CAACI,SAAZ,CAAsB,CAAtB,EAAyB,EAAzB,CAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,kBAAZ;AACA,WAAOA,kBAAP;AACD;;AAjD8B;AAAZrB,W,CACZG,U,GAAa,I","sourcesContent":["import Cookies from \"universal-cookie\";\r\n\r\nexport default class AuthService {\r\n  static myInstance = null;\r\n  userCookies = new Cookies();\r\n\r\n  /**\r\n   * @returns {AuthService}\r\n   */\r\n  static getInstance() {\r\n    if (AuthService.myInstance == null) {\r\n      return (AuthService.myInstance = new AuthService());\r\n    }\r\n    return this.myInstance;\r\n  }\r\n\r\n  loginAndStoreSecureToken(token) {\r\n    this.userCookies.set(\r\n      \"secureToken\",\r\n      { key: token },\r\n      {\r\n        path: \"/\",\r\n        expires: new Date(Date.now() + 604800),\r\n        // httpOnly: true,\r\n        sameSite: true,\r\n      }\r\n    );\r\n  }\r\n\r\n  logoutAndRemoveSecureToken() {\r\n    this.userCookies.remove(\"secureToken\", {\r\n      path: \"/\",\r\n      expires: new Date(Date.now() + 604800),\r\n      // httpOnly: true,\r\n      sameSite: true,\r\n    });\r\n  }\r\n\r\n  hasSecureToken() {\r\n    if (this.userCookies.get(\"secureToken\")) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  getSecureToken() {\r\n    let secureToken = JSON.stringify(this.userCookies.get(\"secureToken\"));\r\n    let secureTokenSpliced = secureToken.substring(0, 15);\r\n    console.log(secureTokenSpliced);\r\n    return secureTokenSpliced;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}