{"ast":null,"code":"var _jsxFileName = \"/Users/nabeelsyed/Documents/School/Final year - Semester 1/SYST36367 Capstone Project Requirements _ Design/Project/newbytex-app/src/Components/userTrackList.jsx\",\n    _s = $RefreshSig$();\n\nimport Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  rootDiv: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    maxWidth: \"100%\",\n    paddingTop: \"5em\"\n  },\n  trackBox: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: \"33%\",\n    height: \"16em\",\n    margin: \"0 0.30rem 2rem 0\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    // alignContent: \"flex-start\",\n    boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\",\n    backgroundColor: \"#1E1E1E\"\n  },\n  trackDetails: {\n    width: \"100%\",\n    margin: 0,\n    padding: 0,\n    alignSelf: \"flex-start\",\n    color: \"white\"\n  },\n  trackTitle: {\n    fontWeight: \"bold\",\n    fontSize: \"2em\",\n    alignSelf: \"flex-start\"\n  },\n  trackSubtitles: {\n    fontStyle: \"italic\",\n    alignSelf: \"flex-start\"\n  },\n  audioElement: {\n    alignSelf: \"flex-end\",\n    display: \"block\",\n    width: \"100%\"\n  },\n  audioPlayer: {\n    width: \"100%\"\n  }\n}));\n\nconst UserTrackList = props => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    tracks\n  } = props;\n\n  const setTrackSource = id => {\n    return `http://localhost:8080/api/track/streamTrack/${id}`;\n  };\n\n  if (!tracks || tracks.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No tracks at the moment, check back later!\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 12\n  }, this);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.rootDiv,\n    children: tracks.map(track => {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        maxWidth: false,\n        component: \"div\",\n        className: classes.trackBox,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${classes.trackDetails} ${classes.trackTitle}`,\n          children: [\" \", track.artist]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${classes.trackDetails} ${classes.trackSubtitles}`,\n          children: [\"Artist: \", track.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `${classes.trackDetails} ${classes.trackSubtitles}`,\n          children: [\"Release Date: \", track.releaseDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.audioElement,\n          children: /*#__PURE__*/_jsxDEV(\"audio\", {\n            className: classes.audioPlayer,\n            type: \"audio/mpeg\",\n            controls: true,\n            volume: \"true\",\n            download: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: setTrackSource(track.id),\n              type: \"audio/mpeg\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), \"Your browser does not support the audio element.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserTrackList, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = UserTrackList;\nexport default UserTrackList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTrackList\");","map":{"version":3,"sources":["/Users/nabeelsyed/Documents/School/Final year - Semester 1/SYST36367 Capstone Project Requirements _ Design/Project/newbytex-app/src/Components/userTrackList.jsx"],"names":["Container","React","makeStyles","Grid","useStyles","theme","rootDiv","display","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","maxWidth","paddingTop","trackBox","width","height","margin","paddingBottom","boxShadow","trackDetails","padding","alignSelf","color","trackTitle","fontWeight","fontSize","trackSubtitles","fontStyle","audioElement","audioPlayer","UserTrackList","props","classes","tracks","setTrackSource","id","length","map","track","artist","title","releaseDate"],"mappings":"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","sourcesContent":["import Container from \"@material-ui/core/Container\";\nimport React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Grid } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  rootDiv: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-evenly\",\n    overflow: \"hidden\",\n    backgroundColor: theme.palette.background.paper,\n    maxWidth: \"100%\",\n    paddingTop: \"5em\",\n  },\n  trackBox: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    width: \"33%\",\n    height: \"16em\",\n    margin: \"0 0.30rem 2rem 0\",\n    paddingTop: \"10px\",\n    paddingBottom: \"10px\",\n    // alignContent: \"flex-start\",\n    boxShadow:\n      \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\",\n    backgroundColor: \"#1E1E1E\",\n  },\n  trackDetails: {\n    width: \"100%\",\n    margin: 0,\n    padding: 0,\n    alignSelf: \"flex-start\",\n    color: \"white\",\n  },\n  trackTitle: {\n    fontWeight: \"bold\",\n    fontSize: \"2em\",\n    alignSelf: \"flex-start\",\n  },\n  trackSubtitles: {\n    fontStyle: \"italic\",\n    alignSelf: \"flex-start\",\n  },\n  audioElement: {\n    alignSelf: \"flex-end\",\n    display: \"block\",\n    width: \"100%\",\n  },\n  audioPlayer: {\n    width: \"100%\",\n  },\n}));\n\nconst UserTrackList = (props) => {\n  const classes = useStyles();\n  const { tracks } = props;\n\n  const setTrackSource = (id) => {\n    return `http://localhost:8080/api/track/streamTrack/${id}`;\n  };\n\n  if (!tracks || tracks.length === 0)\n    return <p>No tracks at the moment, check back later!</p>;\n  return (\n    <Grid className={classes.rootDiv}>\n      {tracks.map((track) => {\n        return (\n          <Container\n            maxWidth={false}\n            component=\"div\"\n            className={classes.trackBox}\n          >\n            <p className={`${classes.trackDetails} ${classes.trackTitle}`}>\n              {\" \"}\n              {track.artist}\n            </p>\n            <p className={`${classes.trackDetails} ${classes.trackSubtitles}`}>\n              Artist: {track.title}\n            </p>\n            <p className={`${classes.trackDetails} ${classes.trackSubtitles}`}>\n              Release Date: {track.releaseDate}\n            </p>\n            <div className={classes.audioElement}>\n              <audio\n                className={classes.audioPlayer}\n                type=\"audio/mpeg\"\n                controls\n                volume=\"true\"\n                download\n              >\n                <source\n                  src={setTrackSource(track.id)}\n                  type=\"audio/mpeg\"\n                ></source>\n                Your browser does not support the audio element.\n              </audio>\n            </div>\n            {/* <a href={setTrackSource(track.id)} download={track.fileName}>Download</a> */}\n          </Container>\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default UserTrackList;\n"]},"metadata":{},"sourceType":"module"}