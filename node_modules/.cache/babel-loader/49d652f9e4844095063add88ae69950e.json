{"ast":null,"code":"var _jsxFileName = \"/Users/nabeelsyed/Documents/School/Final year - Semester 1/SYST36367 Capstone Project Requirements _ Design/Project/newbytex-app/src/Components/trackManagementComp.jsx\",\n    _s = $RefreshSig$();\n\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\nimport React, { useEffect, useState } from \"react\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { useFilePicker } from \"use-file-picker\";\nimport list from \"./adminTrackList\";\nimport trackListLoading from \"./trackListLoading\";\nimport Collapsible from \"react-collapsible\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(7),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.primary.dark\n  },\n  form: {\n    width: \"100%\",\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(3)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: \"100%\"\n  },\n  collapsibleConatainers: {\n    backgroundColor: \"gold\",\n    width: \"100%\"\n  },\n  openedCollapsibleConatainers: {\n    backgroundColor: \"grey\",\n    width: \"100%\"\n  }\n}));\n\nfunction TrackManagementComp() {\n  _s();\n\n  const classes = useStyles();\n  const [title, setTrackName] = React.useState(\"\");\n  const [artist, setTrackArtist] = React.useState(\"\");\n  const [calendarTrackDate, setCalendarTrackDate] = React.useState(new Date());\n  const [releaseDate, setDate] = useState(new Date());\n  const [file, setTrackFile] = React.useState();\n\n  const handleTrackNameChange = event => {\n    console.log(\"TRACK NAME CHANGE\");\n    setTrackName(event.target.value);\n  };\n\n  const handleTrackArtistChange = event => setTrackArtist(event.target.value);\n\n  const handleCalendarClose = () => console.log(`Date is ${releaseDate} -- Calendar closed`);\n\n  const handleCalendarOpen = () => console.log(\"Calendar opened\");\n\n  const handlesetTrackFileChange = event => {\n    console.log(event);\n    console.log(\"CHANGING FILE --------------------------\");\n    setTrackFile(event.target.files[0]);\n  };\n\n  const [message, setMessage] = React.useState(\"\");\n  const [openFileSelector, {\n    filesContent\n  }] = useFilePicker({\n    multiple: false,\n    accept: [\".mp3\", \".wav\"]\n  });\n  const ListLoading = trackListLoading(list);\n  const [appState, setAppState] = useState({\n    loading: false,\n    tracks: null\n  });\n\n  async function apiFunc(toInput) {\n    const formData = new FormData();\n    formData.append(\"title\", toInput.title);\n    formData.append(\"artist\", toInput.artist);\n    formData.append(\"releaseDate\", toInput.releaseDate);\n    formData.append(\"file\", toInput.file);\n\n    if (toInput.title == \"hello\") {\n      console.log(\"test\");\n    }\n\n    const response = await fetch(\"/api/track/createTrack\", {\n      method: \"POST\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      redirect: \"follow\",\n      referrerPolicy: \"no-referrer\",\n      body: formData\n    });\n    let body = await response;\n    console.log(body);\n    setMessage(body.ok ? \"Track added successfully\" : \"Track failed\");\n\n    if (!alert(body.ok ? \"Track added successfully!\" : \"Error! Track failed to upload. Please try again\")) {// window.location.reload();\n    }\n  }\n\n  const handleSubmit = () => {\n    const toInput = {\n      title,\n      artist,\n      releaseDate,\n      file\n    };\n    apiFunc(toInput);\n    setTrackName(\"\");\n    setTrackArtist(\"\");\n    setDate(\"\");\n    setTrackFile();\n    console.log(toInput);\n    console.log(releaseDate);\n  };\n\n  const formatTrackDate = pCalendarTrackDate => {\n    console.log(\"Logging track Date \" + pCalendarTrackDate);\n    setCalendarTrackDate(pCalendarTrackDate);\n    const formattedDate = moment(pCalendarTrackDate).format(\"YYYY-MM-DD\");\n    console.log(\"Formatted Date \" + formattedDate);\n    console.log(\"The datatype \" + typeof formattedDate);\n    return formattedDate;\n  };\n\n  useEffect(() => {\n    setAppState({\n      loading: true\n    });\n    const apiUrl = `/api/track/getAllTracks`;\n    fetch(apiUrl).then(res => res.json()).then(tracks => {\n      setAppState({\n        loading: false,\n        tracks: tracks\n      });\n    });\n  }, [setAppState]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: false,\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LibraryMusicIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Add Tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        noValidate: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"title\",\n              value: title,\n              label: \"Track Name\",\n              name: \"title\",\n              autoComplete: \"title\",\n              helperText: \"cannot be blank\",\n              onChange: handleTrackNameChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"artist\",\n              value: artist,\n              label: \"Track Artist\",\n              type: \"artist\",\n              name: \"artist\",\n              autoComplete: \"artist\",\n              helperText: \"cannot be blank\",\n              onChange: handleTrackArtistChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"datePicker\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                required: true,\n                dateFormat: \"yyyy-MM-dd\",\n                selected: calendarTrackDate,\n                onChange: calendarTrackDate => setDate(formatTrackDate(calendarTrackDate)),\n                id: \"datePicker\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"filePicker\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                name: \"file\",\n                onChange: handlesetTrackFileChange,\n                accept: \"image/png, image/jpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: filesContent.map((file, index) => console.log(\"Test\")( /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"File Selected: \", /*#__PURE__*/_jsxDEV(\"b\", {\n                      children: file.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 42\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this)))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"info\",\n          preventDefault: true,\n          className: classes.submit,\n          onClick: handleSubmit,\n          children: \"Add Track\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        style: {\n          margin: 7\n        },\n        variant: \"body1\",\n        children: [\"Status: \", message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Tracks\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-container\",\n        children: /*#__PURE__*/_jsxDEV(ListLoading, {\n          isLoading: appState.loading,\n          tracks: appState.tracks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TrackManagementComp, \"MgZs9Zduc2mI/Y2hDdBL61ZXw2E=\", false, function () {\n  return [useStyles, useFilePicker];\n});\n\n_c = TrackManagementComp;\nexport default TrackManagementComp;\n\nvar _c;\n\n$RefreshReg$(_c, \"TrackManagementComp\");","map":{"version":3,"sources":["/Users/nabeelsyed/Documents/School/Final year - Semester 1/SYST36367 Capstone Project Requirements _ Design/Project/newbytex-app/src/Components/trackManagementComp.jsx"],"names":["Avatar","Box","Button","Container","CssBaseline","Grid","makeStyles","TextField","Typography","LibraryMusicIcon","React","useEffect","useState","DatePicker","useFilePicker","list","trackListLoading","Collapsible","moment","useStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","primary","dark","form","width","submit","textField","marginLeft","marginRight","collapsibleConatainers","openedCollapsibleConatainers","TrackManagementComp","classes","title","setTrackName","artist","setTrackArtist","calendarTrackDate","setCalendarTrackDate","Date","releaseDate","setDate","file","setTrackFile","handleTrackNameChange","event","console","log","target","value","handleTrackArtistChange","handleCalendarClose","handleCalendarOpen","handlesetTrackFileChange","files","message","setMessage","openFileSelector","filesContent","multiple","accept","ListLoading","appState","setAppState","loading","tracks","apiFunc","toInput","formData","FormData","append","response","fetch","method","mode","cache","credentials","redirect","referrerPolicy","body","ok","alert","handleSubmit","formatTrackDate","pCalendarTrackDate","formattedDate","format","apiUrl","then","res","json","map","index","name"],"mappings":"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","sourcesContent":["import Avatar from \"@material-ui/core/Avatar\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport LibraryMusicIcon from \"@mui/icons-material/LibraryMusic\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { useFilePicker } from \"use-file-picker\";\r\nimport list from \"./adminTrackList\";\r\nimport trackListLoading from \"./trackListLoading\";\r\nimport Collapsible from \"react-collapsible\";\r\nimport moment from \"moment\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(7),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.primary.dark,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  textField: {\r\n    marginLeft: theme.spacing(1),\r\n    marginRight: theme.spacing(1),\r\n    width: \"100%\",\r\n  },\r\n  collapsibleConatainers: {\r\n    backgroundColor: \"gold\",\r\n    width: \"100%\",\r\n  },\r\n  openedCollapsibleConatainers: {\r\n    backgroundColor: \"grey\",\r\n    width: \"100%\",\r\n  },\r\n}));\r\n\r\nfunction TrackManagementComp() {\r\n  const classes = useStyles();\r\n\r\n  const [title, setTrackName] = React.useState(\"\");\r\n  const [artist, setTrackArtist] = React.useState(\"\");\r\n  const [calendarTrackDate, setCalendarTrackDate] = React.useState(new Date());\r\n  const [releaseDate, setDate] = useState(new Date());\r\n  const [file, setTrackFile] = React.useState();\r\n\r\n  const handleTrackNameChange = (event) => {\r\n    console.log(\"TRACK NAME CHANGE\");\r\n    setTrackName(event.target.value);\r\n  };\r\n  const handleTrackArtistChange = (event) => setTrackArtist(event.target.value);\r\n  const handleCalendarClose = () =>\r\n    console.log(`Date is ${releaseDate} -- Calendar closed`);\r\n  const handleCalendarOpen = () => console.log(\"Calendar opened\");\r\n  const handlesetTrackFileChange = (event) => {\r\n    console.log(event);\r\n    console.log(\"CHANGING FILE --------------------------\");\r\n    setTrackFile(event.target.files[0]);\r\n  };\r\n\r\n  const [message, setMessage] = React.useState(\"\");\r\n\r\n  const [openFileSelector, { filesContent }] = useFilePicker({\r\n    multiple: false,\r\n    accept: [\".mp3\", \".wav\"],\r\n  });\r\n\r\n  const ListLoading = trackListLoading(list);\r\n  const [appState, setAppState] = useState({\r\n    loading: false,\r\n    tracks: null,\r\n  });\r\n\r\n  async function apiFunc(toInput) {\r\n    const formData = new FormData();\r\n\r\n    formData.append(\"title\", toInput.title);\r\n    formData.append(\"artist\", toInput.artist);\r\n    formData.append(\"releaseDate\", toInput.releaseDate);\r\n    formData.append(\"file\", toInput.file);\r\n\r\n    if (toInput.title == \"hello\") {\r\n      console.log(\"test\")\r\n    }\r\n\r\n    const response = await fetch(\"/api/track/createTrack\", {\r\n      method: \"POST\",\r\n      mode: \"cors\",\r\n      cache: \"no-cache\",\r\n      credentials: \"same-origin\",\r\n      redirect: \"follow\",\r\n      referrerPolicy: \"no-referrer\",\r\n      body: formData,\r\n    });\r\n    let body = await response;\r\n    console.log(body);\r\n    setMessage(body.ok ? \"Track added successfully\" : \"Track failed\");\r\n    if (\r\n      !alert(\r\n        body.ok\r\n          ? \"Track added successfully!\"\r\n          : \"Error! Track failed to upload. Please try again\"\r\n      )\r\n    ) {\r\n      // window.location.reload();\r\n    }\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    const toInput = { title, artist, releaseDate, file };\r\n\r\n    apiFunc(toInput);\r\n    setTrackName(\"\");\r\n    setTrackArtist(\"\");\r\n    setDate(\"\");\r\n    setTrackFile();\r\n\r\n    console.log(toInput);\r\n    console.log(releaseDate);\r\n\r\n    \r\n  };\r\n\r\n  const formatTrackDate = (pCalendarTrackDate) => {\r\n    console.log(\"Logging track Date \" + pCalendarTrackDate);\r\n    setCalendarTrackDate(pCalendarTrackDate);\r\n    const formattedDate = moment(pCalendarTrackDate).format(\"YYYY-MM-DD\");\r\n    console.log(\"Formatted Date \" + formattedDate);\r\n\r\n    console.log(\"The datatype \" + typeof formattedDate);\r\n    return formattedDate;\r\n  };\r\n\r\n  useEffect(() => {\r\n    setAppState({ loading: true });\r\n    const apiUrl = `/api/track/getAllTracks`;\r\n    fetch(apiUrl)\r\n      .then((res) => res.json())\r\n      .then((tracks) => {\r\n        setAppState({ loading: false, tracks: tracks });\r\n      });\r\n  }, [setAppState]);\r\n  return (\r\n    <Container component=\"main\" maxWidth={false}>\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LibraryMusicIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Add Tracks\r\n        </Typography>\r\n        <form className={classes.form} noValidate>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"title\"\r\n                value={title}\r\n                label=\"Track Name\"\r\n                name=\"title\"\r\n                autoComplete=\"title\"\r\n                helperText=\"cannot be blank\"\r\n                onChange={handleTrackNameChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"artist\"\r\n                value={artist}\r\n                label=\"Track Artist\"\r\n                type=\"artist\"\r\n                name=\"artist\"\r\n                autoComplete=\"artist\"\r\n                helperText=\"cannot be blank\"\r\n                onChange={handleTrackArtistChange}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <div id=\"datePicker\">\r\n                <DatePicker\r\n                required\r\n                dateFormat=\"yyyy-MM-dd\"\r\n                  selected={calendarTrackDate}\r\n                  onChange={(calendarTrackDate) =>\r\n                    setDate(formatTrackDate(calendarTrackDate))\r\n                  }\r\n                  id=\"datePicker\"\r\n                />\r\n              </div>\r\n            </Grid>\r\n\r\n            <Grid item xs={12}>\r\n              <div id=\"filePicker\">\r\n                <input\r\n                  type=\"file\"\r\n                  name=\"file\"\r\n                  onChange={handlesetTrackFileChange}\r\n                  accept=\"image/png, image/jpeg\"\r\n                ></input>\r\n                <div>\r\n                  {filesContent.map((file, index) =>\r\n                    console.log(\"Test\")(\r\n                      <div>\r\n                        <p>\r\n                          File Selected: <b>{file.name}</b>\r\n                        </p>\r\n                        {/* <p>{file}</p> */}\r\n                        {/* <div key={index}>{file.content}</div> */}\r\n                        <br />\r\n                      </div>\r\n                    )\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Button\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"info\"\r\n            preventDefault\r\n            className={classes.submit}\r\n            onClick={handleSubmit}\r\n          >\r\n            Add Track\r\n          </Button>\r\n        </form>\r\n        <Typography style={{ margin: 7 }} variant=\"body1\">\r\n          Status: {message}\r\n        </Typography>\r\n      </div>\r\n      <div className=\"Tracks\">\r\n        <div className=\"track-container\">\r\n          <ListLoading isLoading={appState.loading} tracks={appState.tracks} />\r\n        </div>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TrackManagementComp;\r\n"]},"metadata":{},"sourceType":"module"}