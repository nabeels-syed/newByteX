{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Jawad\\\\Desktop\\\\newByteX-ReactJS\\\\newByteX-ReactJS\\\\src\\\\Components\\\\userTrackList.jsx\",\n    _s = $RefreshSig$();\n\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport { ArrowRightSharp } from \"@mui/icons-material\";\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserTrackList = props => {\n  _s();\n\n  const {\n    tracks\n  } = props;\n  const audioUrl = useRef();\n  const [id, setTrackId] = React.useState(\"\"); //const [acquiredId, setAcquiredId] = React.useState(\"\");\n\n  const setTrackSource = id => {\n    return `http://localhost:8080/api/track/streamTrack/${id}`;\n  };\n\n  if (!tracks || tracks.length === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"No tracks uploaded\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 46\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"list-head\",\n      children: \"My music tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), tracks.map(track => {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        component: \"div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"trackContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"track-id\",\n            children: [track.id, \" --\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"track-title\",\n            children: [track.title, \" --\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"track-artist\",\n            children: [\" \", track.artist, \" --\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"audio\", {\n              type: \"audio/mpeg\",\n              controls: true,\n              volume: \"true\",\n              children: [/*#__PURE__*/_jsxDEV(\"source\", {\n                src: setTrackSource(track.id),\n                type: \"audio/mpeg\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 19\n              }, this), \"Your browser does not support the audio element.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserTrackList, \"l2O4MeugNJfAUQdB6WLvPL9amTk=\");\n\n_c = UserTrackList;\nexport default UserTrackList;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserTrackList\");","map":{"version":3,"sources":["C:/Users/Jawad/Desktop/newByteX-ReactJS/newByteX-ReactJS/src/Components/userTrackList.jsx"],"names":["Button","Container","ArrowRightSharp","React","useRef","UserTrackList","props","tracks","audioUrl","id","setTrackId","useState","setTrackSource","length","map","track","title","artist"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,0BAAnB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,eAAT,QAAgC,qBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,OAAvB;;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAAA;;AAC/B,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAnB;AACA,QAAME,QAAQ,GAAGJ,MAAM,EAAvB;AACA,QAAM,CAACK,EAAD,EAAKC,UAAL,IAAmBP,KAAK,CAACQ,QAAN,CAAe,EAAf,CAAzB,CAH+B,CAI/B;;AAEA,QAAMC,cAAc,GAAIH,EAAD,IAAQ;AAC7B,WAAQ,+CAA8CA,EAAG,EAAzD;AACD,GAFD;;AAIA,MAAI,CAACF,MAAD,IAAWA,MAAM,CAACM,MAAP,KAAkB,CAAjC,EAAoC,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACpC,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGN,MAAM,CAACO,GAAP,CAAYC,KAAD,IAAW;AACrB,0BACE,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,KAArB;AAAA,+BACE;AAAoB,UAAA,SAAS,EAAC,gBAA9B;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,UAAhB;AAAA,uBAA4BA,KAAK,CAACN,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,aAAhB;AAAA,uBAA+BM,KAAK,CAACC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAM,YAAA,SAAS,EAAC,cAAhB;AAAA,4BAAiCD,KAAK,CAACE,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAA,mCACE;AAAO,cAAA,IAAI,EAAC,YAAZ;AAAyB,cAAA,QAAQ,MAAjC;AAAkC,cAAA,MAAM,EAAC,MAAzC;AAAA,sCACE;AAAQ,gBAAA,GAAG,EAAEL,cAAc,CAACG,KAAK,CAACN,EAAP,CAA3B;AAAuC,gBAAA,IAAI,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA,sBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA,WAAUM,KAAK,CAACN,EAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAeD,KAhBA,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjCD;;GAAMJ,a;;KAAAA,a;AAmCN,eAAeA,aAAf","sourcesContent":["import Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport { ArrowRightSharp } from \"@mui/icons-material\";\nimport React from \"react\";\nimport { useRef } from \"react\";\n\nconst UserTrackList = (props) => {\n  const { tracks } = props;\n  const audioUrl = useRef();\n  const [id, setTrackId] = React.useState(\"\");\n  //const [acquiredId, setAcquiredId] = React.useState(\"\");\n\n  const setTrackSource = (id) => {\n    return `http://localhost:8080/api/track/streamTrack/${id}`\n  }\n\n  if (!tracks || tracks.length === 0) return <p>No tracks uploaded</p>;\n  return (\n    <ul>\n      <h2 className=\"list-head\">My music tracks</h2>\n      {tracks.map((track) => {\n        return (\n          <Container component=\"div\">\n            <div key={track.id} className=\"trackContainer\">\n              <span className=\"track-id\">{track.id} --</span>\n              <span className=\"track-title\">{track.title} --</span>\n              <span className=\"track-artist\"> {track.artist} --</span>\n              <span>\n                <audio type=\"audio/mpeg\" controls volume=\"true\">\n                  <source src={setTrackSource(track.id)} type=\"audio/mpeg\"></source>\n                  Your browser does not support the audio element.\n                </audio>\n              </span>\n            </div>\n          </Container>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default UserTrackList;\n"]},"metadata":{},"sourceType":"module"}